{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","name","value","onChange","toUpperCase","slice","getformatedName","type","placeholder","required","initialState","NewMovie","state","target","setState","prevState","onSubmit","event","preventDefault","props","addMovie","this","method","Object","entries","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"myEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0BCnBGK,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,OACnB,+BALsB,SAAAF,GAAI,OAC1BA,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,GAKhCC,CAAgBL,GACjB,2BACEZ,UAAU,QACVS,IAAKG,EACLM,KAAK,OACLN,KAAMA,EACNO,YAAaP,EACbC,MAAOA,EACPC,SAAUA,EACVM,UAAQ,MCbRC,G,MAAe,CACnBzB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAGGY,EAAb,4MACEC,MADF,eACeF,GADf,EAGEP,SAAW,YAAiB,IAAdU,EAAa,EAAbA,OACZ,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,kBAEpBF,EAAOZ,KAAOY,EAAOX,YAN5B,EAUEc,SAAW,SAACC,GACVA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKR,OAEzB,EAAKE,SAAL,eAAmBJ,KAfvB,uDAkBY,IAAD,OACP,OACE,0BACErB,UAAU,OACVY,KAAK,kBACLe,SAAUK,KAAKL,SACfM,OAAO,QAEP,wBAAIjC,UAAU,WAAd,iBACCkC,OAAOC,QAAQH,KAAKT,OAAOhB,KAAI,mCAAEK,EAAF,KAAQC,EAAR,YAC9B,kBAAC,EAAD,CACED,KAAMA,EACNC,MAAOA,EACPC,SAAU,EAAKA,cAInB,4BACEd,UAAU,SACVkB,KAAK,UAFP,YAnCR,GAA8BkB,a,QCPjBC,EAAb,4MACEd,MAAQ,CACNjB,OAAQgC,GAFZ,EAKEP,SAAW,SAACvB,GACV,EAAKiB,UAAS,SAAAC,GAAS,MAAK,CAC1BpB,OAAO,GAAD,mBAAMoB,EAAUpB,QAAhB,CAAwBE,SAPpC,uDAWY,IACAF,EAAW0B,KAAKT,MAAhBjB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU+B,SAAUC,KAAKD,iBApBnC,GAAyBK,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.016d85b0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst getformatedName = name => (\n  name[0].toUpperCase() + name.slice(1)\n);\n\nexport const Input = ({ name, value, onChange }) => (\n  <label>\n    {getformatedName(name)}\n    <input\n      className=\"input\"\n      key={name}\n      type=\"text\"\n      name={name}\n      placeholder={name}\n      value={value}\n      onChange={onChange}\n      required\n    />\n  </label>\n);\n\nInput.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewMovie.scss';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = { ...initialState };\n\n  onChange = ({ target }) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.addMovie(this.state);\n\n    this.setState({ ...initialState });\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        name=\"addNewMovieForm\"\n        onSubmit={this.onSubmit}\n        method=\"post\"\n      >\n        <h1 className=\"heading\">Add new movie</h1>\n        {Object.entries(this.state).map(([name, value]) => (\n          <Input\n            name={name}\n            value={value}\n            onChange={this.onChange}\n          />\n        ))}\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}